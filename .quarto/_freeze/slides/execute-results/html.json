{
  "hash": "7bbabfd1511d10683b0cc6de6c53ee64",
  "result": {
    "markdown": "---\ntitle: \"spatialsample:\"\nsubtitle: \"A tidy approach to spatial cross-validation\"\nauthor:\n  - name: \"**Michael J Mahoney**\"\n    orcid: 0000-0003-2402-304X\n    email: mjmahone@esf.edu\n    url: https://mm218.dev\nformat: \n  revealjs: \n    standalone: true\n    center: true\n    slide-number: false\n    overview: true\n    width: 1280\n    height: 720\n    theme: [default, custom.scss]\n    footer: \"spatialsample: A tidy approach to spatial cross-validation - https://mm218.dev/boston_useR_2023\"\n---\n\n\n\n\n\n# About Me\n\n:::: {.columns}\n::: {.column width=\"50%\"}\n\n- Mike Mahoney\n\n- PhD Candidate at SUNY-ESF\n\n- Focusing on visualization, VR and ML as ways to think about large-scale systems\n\n- These slides: [mm218.dev/boston_useR_2023](https://mm218.dev/boston_useR_2023)\n\n:::\n\n::: {.column width=\"10%\"}\n:::\n\n::: {.column width=\"40%\"}\n\n![](me.jpeg)\n\n:::\n::::\n\n---\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/unnamed-chunk-1-1.svg){width=960}\n:::\n:::\n\n\n---\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/unnamed-chunk-2-1.png){width=960}\n:::\n:::\n\n\n---\n\n\n::: {.cell animation.hook='gifski'}\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/vfold_gif-.gif){width=960}\n:::\n:::\n\n\n\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(boston_canopy, package = \"spatialsample\")\nggplot(boston_canopy, aes(fill = canopy_area_2019)) + \n  geom_sf() + \n  scale_fill_distiller(name = \"Canopy area (2019)\", palette = \"YlGn\", direction = 1)\n```\n\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrsample::vfold_cv(boston_canopy, v = 5)\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/first_vfold-1.svg){width=960}\n:::\n:::\n\n\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(spatialsample)\nset.seed(1234)\nfolds <- spatial_clustering_cv(boston_canopy, v = 5)\nfolds\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> #  5-fold spatial cross-validation \n#> # A tibble: 5 × 2\n#>   splits            id   \n#>   <list>            <chr>\n#> 1 <split [604/78]>  Fold1\n#> 2 <split [595/87]>  Fold2\n#> 3 <split [524/158]> Fold3\n#> 4 <split [490/192]> Fold4\n#> 5 <split [515/167]> Fold5\n```\n:::\n:::\n\n\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nautoplot(folds)\n```\n\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/boston_clusters-1.svg){width=960}\n:::\n:::\n\n\n---\n\n\n::: {.cell animation.hook='gifski'}\n\n```{.r .cell-code}\nlibrary(purrr)\nwalk(folds$splits, function(x) print(autoplot(x)))\n```\n\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/boston_clusters_gif-.gif){width=960}\n:::\n:::\n\n\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nfolds <- spatial_block_cv(boston_canopy, v = 5, n = c(10, 10))\nfolds\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> #  5-fold spatial block cross-validation \n#> # A tibble: 5 × 2\n#>   splits            id   \n#>   <list>            <chr>\n#> 1 <split [525/157]> Fold1\n#> 2 <split [539/143]> Fold2\n#> 3 <split [548/134]> Fold3\n#> 4 <split [544/138]> Fold4\n#> 5 <split [572/110]> Fold5\n```\n:::\n:::\n\n\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nautoplot(folds)\n```\n\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/boston_blocks-1.svg){width=960}\n:::\n:::\n\n\n---\n\n\n::: {.cell animation.hook='gifski'}\n\n```{.r .cell-code}\nwalk(folds$splits, function(x) print(autoplot(x)))\n```\n\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/boston_blocks_gif-.gif){width=960}\n:::\n:::\n\n\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nfolds <- spatial_buffer_vfold_cv(\n  boston_canopy, \n  v = 5, \n  radius = NULL, \n  buffer = NULL\n)\nfolds\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> #  5-fold spatial cross-validation \n#> # A tibble: 5 × 2\n#>   splits            id   \n#>   <list>            <chr>\n#> 1 <split [545/137]> Fold1\n#> 2 <split [545/137]> Fold2\n#> 3 <split [546/136]> Fold3\n#> 4 <split [546/136]> Fold4\n#> 5 <split [546/136]> Fold5\n```\n:::\n:::\n\n\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nautoplot(folds)\n```\n\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/boston_vfold-1.svg){width=960}\n:::\n:::\n\n\n---\n\n\n::: {.cell animation.hook='gifski'}\n\n```{.r .cell-code}\nwalk(folds$splits, function(x) print(autoplot(x)))\n```\n\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/boston_vfold_gif-.gif){width=960}\n:::\n:::\n\n\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfolds <- spatial_buffer_vfold_cv(\n  boston_canopy, \n  v = Inf, \n  radius = 1500,\n  buffer = 1500\n)\n\nfolds |> head(5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> # A tibble: 5 × 2\n#>   splits           id     \n#>   <list>           <chr>  \n#> 1 <split [643/13]> Fold001\n#> 2 <split [641/13]> Fold002\n#> 3 <split [654/9]>  Fold003\n#> 4 <split [664/5]>  Fold004\n#> 5 <split [651/13]> Fold005\n```\n:::\n:::\n\n\n---\n\n\n::: {.cell animation.hook='gifski'}\n\n```{.r .cell-code}\nwalk(folds$splits, function(x) print(autoplot(x)))\n```\n:::\n\n::: {.cell animation.hook='gifski'}\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/boston_vfold_all_gif-.gif){width=960}\n:::\n:::\n\n\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfolds <- spatial_clustering_cv(boston_canopy, v = 5, buffer = 1500)\nwalk(folds$splits, function(x) print(autoplot(x)))\n```\n\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/unnamed-chunk-9-1.png){width=960}\n:::\n\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/unnamed-chunk-9-2.png){width=960}\n:::\n\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/unnamed-chunk-9-3.png){width=960}\n:::\n\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/unnamed-chunk-9-4.png){width=960}\n:::\n\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/unnamed-chunk-9-5.png){width=960}\n:::\n:::\n\n\n---\n\n## Thank you!\n\n<br />\n\n#### Find me online:\n\n{{< fa globe >}} [mm218.dev](https://mm218.dev) \n\n{{< fa brands github >}} @mikemahoney218 \n\n<i class=\"fab fa-mastodon\"></i> [@MikeMahoney218@fosstodon.org](https://fosstodon.org/@MikeMahoney218)\n\n<br />\n\nSlides available at [mm218.dev/boston_useR_2023](https://mm218.dev/boston_useR_2023)\n",
    "supporting": [
      "slides_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}