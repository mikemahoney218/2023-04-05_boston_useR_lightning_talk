{
  "hash": "879e2687d69b14ab43195be81ea98358",
  "result": {
    "markdown": "---\ntitle: \"spatialsample:\"\nsubtitle: \"A tidy approach to spatial cross-validation\"\nauthor:\n  - name: \"**Michael J Mahoney**\"\n    orcid: 0000-0003-2402-304X\n    email: mjmahone@esf.edu\n    url: https://mm218.dev\nformat: \n  revealjs: \n    standalone: true\n    center: true\n    slide-number: false\n    overview: true\n    width: 1280\n    height: 720\n    theme: [default, custom.scss]\n    footer: \"spatialsample: A tidy approach to spatial cross-validation - https://mm218.dev/boston_useR_2023\"\n---\n\n\n\n\n\n## About Me\n\n:::: {.columns}\n::: {.column width=\"50%\"}\n\n- Mike Mahoney\n\n- PhD candidate at SUNY-ESF\n\n- 2022 summer intern with Posit (spatialsample, rsample)\n\n- These slides: [mm218.dev/boston_useR_2023](https://mm218.dev/boston_useR_2023)\n\n:::\n\n::: {.column width=\"10%\"}\n:::\n\n::: {.column width=\"40%\"}\n\n![](me.jpeg)\n\n:::\n::::\n\n## Cross-validation:\n\n\n::: {.cell animation.hook='gifski'}\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/vfold_gif-.gif){width=960}\n:::\n:::\n\n\n## rsample and friends\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidymodels)\nrsample::vfold_cv(spatialsample::boston_canopy) |> head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> # A tibble: 6 × 2\n#>   splits           id    \n#>   <list>           <chr> \n#> 1 <split [613/69]> Fold01\n#> 2 <split [613/69]> Fold02\n#> 3 <split [614/68]> Fold03\n#> 4 <split [614/68]> Fold04\n#> 5 <split [614/68]> Fold05\n#> 6 <split [614/68]> Fold06\n```\n:::\n:::\n\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nworkflow() |> \n  add_model(linear_reg()) |> \n  add_formula(canopy_area_2019 ~ land_area * mean_temp) |> \n  fit_resamples(vfold_cv(spatialsample::boston_canopy)) |> \n  collect_metrics()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> # A tibble: 2 × 6\n#>   .metric .estimator       mean     n    std_err .config             \n#>   <chr>   <chr>           <dbl> <int>      <dbl> <chr>               \n#> 1 rmse    standard   377089.       10 20426.     Preprocessor1_Model1\n#> 2 rsq     standard        0.353    10     0.0178 Preprocessor1_Model1\n```\n:::\n:::\n\n\n\n## What does \"new data\" mean?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(spatialsample::boston_canopy, aes(fill = canopy_area_2019)) + geom_sf() + \n  scale_fill_distiller(name = \"Canopy area (2019)\", palette = \"YlGn\", direction = 1)\n```\n\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/unnamed-chunk-3-1.svg){width=960}\n:::\n:::\n\n\n## Are these folds really unrelated?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrsample::vfold_cv(spatialsample::boston_canopy, v = 5)\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/first_vfold-1.svg){width=960}\n:::\n:::\n\n\n---\n\n![](https://raw.githubusercontent.com/rstudio/hex-stickers/main/PNG/spatialsample.png){.quarto-figure-center}\n\n\n## Spatial clustering\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(spatialsample)\nset.seed(1234)\nspatial_clustering_cv(boston_canopy, v = 5)\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/boston_clusters-1.svg){width=960}\n:::\n:::\n\n\n---\n\n\n::: {.cell animation.hook='gifski'}\n\n```{.r .cell-code}\nlibrary(purrr)\nwalk(spatial_clustering_cv(boston_canopy, v = 5)$splits, function(x) print(autoplot(x)))\n```\n\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/boston_clusters_gif-.gif){width=960}\n:::\n:::\n\n\n## Spatial blocking\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspatial_block_cv(boston_canopy, v = 5, n = c(10, 10))\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/boston_blocks-1.svg){width=960}\n:::\n:::\n\n\n## Spatial LODO\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfolds <- spatial_buffer_vfold_cv(boston_canopy, v = Inf, radius = 1500, buffer = 1500)\nwalk(folds$splits, function(x) print(autoplot(x)))\n```\n:::\n\n::: {.cell animation.hook='gifski'}\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/boston_vfold_all_gif-.gif){width=960}\n:::\n:::\n\n\n---\n\n![](fig-comparisons-1.png){.quarto-figure-center}\n\nhttps://doi.org/FILL_ME_IN\n\n## Other features:\n\n<br />\n\n{{< fa square-check >}}  Works with projected & geographic CRS\n\n{{< fa square-check >}} Handles mismatched CRS \n\n{{< fa square-check >}} Aware of CRS units, arguments accept explicit units\n\n{{< fa square-check >}} Handles all geometry types$^*$\n\n{{< fa square-check >}} Integrates with the rest of tidymodels\n\n## Thank you!\n\n<br />\n\n#### Find me online:\n\n{{< fa globe >}} [mm218.dev](https://mm218.dev) \n\n{{< fa brands github >}} @mikemahoney218 \n\n<i class=\"fab fa-mastodon\"></i> [@MikeMahoney218@fosstodon.org](https://fosstodon.org/@MikeMahoney218)\n\n<br />\n\nSlides available at [mm218.dev/boston_useR_2023](https://mm218.dev/boston_useR_2023)\n\nMore spatialsample: [https://spatialsample.tidymodels.org/](https://spatialsample.tidymodels.org/)\n",
    "supporting": [
      "slides_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}